plugins {
	id 'maven-publish'
	alias libs.plugins.quilt.loom
}

base {
	archivesName = project.archives_base_name
}

version = "$project.version+${libs.versions.minecraft.get()}"
group = project.maven_group

repositories {
	// Quilt's Maven repository
	maven {
		url = "https://maven.quiltmc.org/repository/release/"
	}
	// Fabric's Maven repository (optional, for compatibility)
	maven {
		url = "https://maven.fabricmc.net/"
	}
	// Maven Central
	mavenCentral()
}

loom {
	// Loom and Loader both use this block in order to gather more information about your mod.
	mods {
		// Replace "example_mod" with your mod ID
		"example_mod" {
			sourceSet("main")
		}
	}
}

dependencies {
	// Minecraft and mappings
	minecraft libs.minecraft
	mappings variantOf(libs.quilt.mappings) { classifier 'intermediary-v2' }

	// Quilt Loader
	modImplementation libs.quilt.loader

	// Quilted Fabric API (includes QSL)
	modImplementation libs.bundles.quilted.fabric.api

	// Optional: Direct QSL dependency if needed (ensure version compatibility)
	// modImplementation "org.quiltmc:quilt-standard-libraries:9.0.0" // Replace with a correct version if needed
}

processResources {
	inputs.properties 'version': version, 'group': project.group

	filesMatching('quilt.mod.json') {
		expand 'version': version, 'group': project.group
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = 'UTF-8'
	// Minecraft 1.20.5 (24w14a) and above use Java 21.
	it.options.release = 21
}

java {
	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21

	// Include sources in the build output
	withSourcesJar()

	// Uncomment this to generate Javadocs (useful for libraries)
	// withJavadocJar()
}

jar {
	// Include the LICENSE file in the JAR
	from('LICENSE') {
		rename { "${it}_${base.archivesName.get()}" }
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}
}
